{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Inline-cpp","body":"# INTRODUCTION:\r\n\r\nInline::CPP -- Write Perl subroutines and classes in C++.\r\n\r\nInline::CPP lets you write Perl subroutines and classes in C++. You\r\ndon't have to learn XS (at first) or SWIG (ever), you can just put code right \"inline\"\r\nin your source.\r\n\r\n## Example:\r\n\r\n    use Inline CPP => <<'END';\r\n\r\n    class JAxH {\r\n      public:\r\n        JAxH(char *x);\r\n    \r\n        SV* data();\r\n      private:\r\n        SV *dat;\r\n    };\r\n    \r\n    JAxH::JAxH(char *x) { dat = newSVpvf(\"Just Another %s Hacker\", x); }\r\n    SV* JAxH::data() { return dat; }\r\n    \r\n    END\r\n\r\n    print JAxH->new('Inline')->data(), \"\\n\";\r\n\r\nWhen run, this complete program prints:\r\n\r\n    Just Another Inline Hacker.\r\n\r\n\r\n***\r\n\r\n# FEATURES:\r\n\r\nInline::CPP version 0.41 is a Stable Release.  See the 'Changes' file\r\nfor details.\r\n\r\n***\r\n\r\n# INSTALLATION:\r\n\r\nIt should go without saying, but you will need a C++ compiler on your system.\r\nThe C++ compiler should be of the same flavor as the C compiler used to build\r\nperl itself.  If you're using GNU C++, be sure that you have the g++ front\r\nend installed (it isn't installed by default on some Linux distros, for\r\nexample).  If you cannot execute 'g++ -v' from the command prompt, or some\r\nvariation for your specific C++ compiler,\r\n\r\nThis module requires Inline::C.pm version 0.50 or higher to be installed.\r\nIt also uses Parse::RecDescent.\r\n\r\nTo install Inline::CPP do this:\r\n\r\n    perl Makefile.PL\r\n    make\r\n    make test\r\n    make install\r\n\r\n(On ActivePerl for MSWin32, use nmake instead of make.)\r\n(On Strawberry Perl you may use dmake instead.)\r\n\r\nAs Makefile.PL runs you will be prompted for what C++ compiler and library to\r\nuse.  Accepting the default should work in nearly every case (and if it\r\ndoesn't, let me know).\r\n\r\n***\r\n\r\n# INFORMATION:\r\n\r\n- For more information on Inline::CPP see 'perldoc Inline::CPP'.\r\n- For information about Inline.pm, see 'perldoc Inline'.\r\n- For information about Inline::C (of which this is a subclass)\r\n  see 'perldoc Inline::C', as well as 'perldoc Inline::C-Cookbook'.\r\n- For information on using Perl with C or C++, see 'perldoc perlapi'\r\n\r\nThe Inline mailing list is inline@perl.org. Send mail to\r\ninline-subscribe@perl.org to subscribe.\r\n\r\nThis module's development is under version control with Git, hosted on Github\r\nat https://github.com/daoswald/Inline-CPP\r\n\r\nPlease send questions and comments to \"David Oswald\" <DAVIDO@cpan.org>\r\n\r\nCopyright (c) 2003 - 2012, Neil Watkiss, David Oswald. All Rights Reserved.\r\n","google":"","tagline":"Perl Module: Inline::CPP: Include C++ code inline within Perl code."}